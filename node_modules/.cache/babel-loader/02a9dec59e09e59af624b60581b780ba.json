{"ast":null,"code":"const fetchSettings = () => {\n  return fetch(process.env.REACT_APP_API_LINK + \"settings\").then(x => x.json());\n};\n\nconst fetchSkills = () => {\n  return fetch(process.env.REACT_APP_API_LINK + \"skills\").then(x => x.json());\n};\n\nconst fetchExperiences = () => {\n  return fetch(process.env.REACT_APP_API_LINK + \"experiences\").then(x => x.json());\n};\n\nconst fetchEducations = () => {\n  return fetch(process.env.REACT_APP_API_LINK + \"educations\").then(x => x.json());\n};\n\nconst wrapPromise = promise => {\n  let status = \"pending\";\n  let result = \"\";\n  let suspender = promise.then(r => {\n    status = \"success\";\n    result = r;\n  }, e => {\n    status = \"error\";\n    result = e;\n  });\n  return {\n    read() {\n      if (status === \"pending\") {\n        throw suspender;\n      } else if (status === \"error\") {\n        throw result;\n      }\n\n      return result;\n    }\n\n  };\n};\n\nexport const settingsFetch = () => {\n  return {\n    settings: wrapPromise(fetchSettings()),\n    skills: wrapPromise(fetchSkills()),\n    experiences: wrapPromise(fetchExperiences()),\n    educations: wrapPromise(fetchEducations())\n  };\n};","map":{"version":3,"sources":["/Applications/MAMP/htdocs/laravel/react/Portfolio/achyutcomnp/src/DataFetcher.js"],"names":["fetchSettings","fetch","process","env","REACT_APP_API_LINK","then","x","json","fetchSkills","fetchExperiences","fetchEducations","wrapPromise","promise","status","result","suspender","r","e","read","settingsFetch","settings","skills","experiences","educations"],"mappings":"AAAA,MAAMA,aAAa,GAAG,MAAM;AAC1B,SAAOC,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,GAA+B,UAAhC,CAAL,CACJC,IADI,CACEC,CAAD,IAAOA,CAAC,CAACC,IAAF,EADR,CAAP;AAED,CAHD;;AAIA,MAAMC,WAAW,GAAG,MAAM;AACxB,SAAOP,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,GAA+B,QAAhC,CAAL,CACJC,IADI,CACEC,CAAD,IAAOA,CAAC,CAACC,IAAF,EADR,CAAP;AAED,CAHD;;AAIA,MAAME,gBAAgB,GAAG,MAAM;AAC7B,SAAOR,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,GAA+B,aAAhC,CAAL,CACJC,IADI,CACEC,CAAD,IAAOA,CAAC,CAACC,IAAF,EADR,CAAP;AAED,CAHD;;AAIA,MAAMG,eAAe,GAAG,MAAM;AAC1B,SAAOT,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,GAA+B,YAAhC,CAAL,CACJC,IADI,CACEC,CAAD,IAAOA,CAAC,CAACC,IAAF,EADR,CAAP;AAED,CAHH;;AAKA,MAAMI,WAAW,GAAIC,OAAD,IAAa;AAC/B,MAAIC,MAAM,GAAG,SAAb;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,SAAS,GAAGH,OAAO,CAACP,IAAR,CACbW,CAAD,IAAO;AACLH,IAAAA,MAAM,GAAG,SAAT;AACAC,IAAAA,MAAM,GAAGE,CAAT;AACD,GAJa,EAKbC,CAAD,IAAO;AACLJ,IAAAA,MAAM,GAAG,OAAT;AACAC,IAAAA,MAAM,GAAGG,CAAT;AACD,GARa,CAAhB;AAWA,SAAO;AACLC,IAAAA,IAAI,GAAG;AACL,UAAIL,MAAM,KAAK,SAAf,EAA0B;AACxB,cAAME,SAAN;AACD,OAFD,MAEO,IAAIF,MAAM,KAAK,OAAf,EAAwB;AAC7B,cAAMC,MAAN;AACD;;AAED,aAAOA,MAAP;AACD;;AATI,GAAP;AAWD,CAzBD;;AA2BA,OAAO,MAAMK,aAAa,GAAG,MAAM;AACjC,SAAO;AACLC,IAAAA,QAAQ,EAAET,WAAW,CAACX,aAAa,EAAd,CADhB;AAELqB,IAAAA,MAAM,EAAEV,WAAW,CAACH,WAAW,EAAZ,CAFd;AAGLc,IAAAA,WAAW,EAAEX,WAAW,CAACF,gBAAgB,EAAjB,CAHnB;AAILc,IAAAA,UAAU,EAAEZ,WAAW,CAACD,eAAe,EAAhB;AAJlB,GAAP;AAMD,CAPM","sourcesContent":["const fetchSettings = () => {\n  return fetch(process.env.REACT_APP_API_LINK+\"settings\")\n    .then((x) => x.json());\n};\nconst fetchSkills = () => {\n  return fetch(process.env.REACT_APP_API_LINK+\"skills\")\n    .then((x) => x.json());\n};\nconst fetchExperiences = () => {\n  return fetch(process.env.REACT_APP_API_LINK+\"experiences\")\n    .then((x) => x.json());\n};\nconst fetchEducations = () => {\n    return fetch(process.env.REACT_APP_API_LINK+\"educations\")\n      .then((x) => x.json());\n  };\n\nconst wrapPromise = (promise) => {\n  let status = \"pending\";\n  let result = \"\";\n  let suspender = promise.then(\n    (r) => {\n      status = \"success\";\n      result = r;\n    },\n    (e) => {\n      status = \"error\";\n      result = e;\n    }\n  );\n\n  return {\n    read() {\n      if (status === \"pending\") {\n        throw suspender;\n      } else if (status === \"error\") {\n        throw result;\n      }\n\n      return result;\n    },\n  };\n};\n\nexport const settingsFetch = () => {\n  return {\n    settings: wrapPromise(fetchSettings()),\n    skills: wrapPromise(fetchSkills()),\n    experiences: wrapPromise(fetchExperiences()),\n    educations: wrapPromise(fetchEducations()),\n  };\n};\n"]},"metadata":{},"sourceType":"module"}