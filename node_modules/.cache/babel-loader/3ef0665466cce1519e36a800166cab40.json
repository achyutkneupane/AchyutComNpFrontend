{"ast":null,"code":"var fetchSettings=function fetchSettings(){return fetch(process.env.REACT_APP_API_LINK+\"settings\").then(function(x){return x.json();});};var fetchSkills=function fetchSkills(){return fetch(process.env.REACT_APP_API_LINK+\"skills\").then(function(x){return x.json();});};var fetchExperiences=function fetchExperiences(){return fetch(process.env.REACT_APP_API_LINK+\"experiences\").then(function(x){return x.json();});};var fetchEducations=function fetchEducations(){return fetch(process.env.REACT_APP_API_LINK+\"educations\").then(function(x){return x.json();});};var wrapPromise=function wrapPromise(promise){var status=\"pending\";var result=\"\";var suspender=promise.then(function(r){status=\"success\";result=r;},function(e){status=\"error\";result=e;});return{read:function read(){if(status===\"pending\"){throw suspender;}else if(status===\"error\"){throw result;}return result;}};};export var settingsFetch=function settingsFetch(){return{settings:wrapPromise(fetchSettings()),skills:wrapPromise(fetchSkills()),experiences:wrapPromise(fetchExperiences()),educations:wrapPromise(fetchEducations())};};","map":{"version":3,"sources":["/Applications/MAMP/htdocs/laravel/react/Portfolio/achyutcomnp/src/DataFetcher.js"],"names":["fetchSettings","fetch","process","env","REACT_APP_API_LINK","then","x","json","fetchSkills","fetchExperiences","fetchEducations","wrapPromise","promise","status","result","suspender","r","e","read","settingsFetch","settings","skills","experiences","educations"],"mappings":"AAAA,GAAMA,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1B,MAAOC,CAAAA,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,CAA+B,UAAhC,CAAL,CACJC,IADI,CACC,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,IAAF,EAAP,EADD,CAAP,CAED,CAHD,CAIA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,MAAOP,CAAAA,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,CAA+B,QAAhC,CAAL,CACJC,IADI,CACC,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,IAAF,EAAP,EADD,CAAP,CAED,CAHD,CAIA,GAAME,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CAC7B,MAAOR,CAAAA,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,CAA+B,aAAhC,CAAL,CACJC,IADI,CACC,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,IAAF,EAAP,EADD,CAAP,CAED,CAHD,CAIA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC1B,MAAOT,CAAAA,KAAK,CAACC,OAAO,CAACC,GAAR,CAAYC,kBAAZ,CAA+B,YAAhC,CAAL,CACJC,IADI,CACC,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACC,IAAF,EAAP,EADD,CAAP,CAED,CAHH,CAKA,GAAMI,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,OAAD,CAAa,CAC/B,GAAIC,CAAAA,MAAM,CAAG,SAAb,CACA,GAAIC,CAAAA,MAAM,CAAG,EAAb,CACA,GAAIC,CAAAA,SAAS,CAAGH,OAAO,CAACP,IAAR,CACd,SAACW,CAAD,CAAO,CACLH,MAAM,CAAG,SAAT,CACAC,MAAM,CAAGE,CAAT,CACD,CAJa,CAKd,SAACC,CAAD,CAAO,CACLJ,MAAM,CAAG,OAAT,CACAC,MAAM,CAAGG,CAAT,CACD,CARa,CAAhB,CAWA,MAAO,CACLC,IADK,gBACE,CACL,GAAIL,MAAM,GAAK,SAAf,CAA0B,CACxB,KAAME,CAAAA,SAAN,CACD,CAFD,IAEO,IAAIF,MAAM,GAAK,OAAf,CAAwB,CAC7B,KAAMC,CAAAA,MAAN,CACD,CAED,MAAOA,CAAAA,MAAP,CACD,CATI,CAAP,CAWD,CAzBD,CA2BA,MAAO,IAAMK,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACjC,MAAO,CACLC,QAAQ,CAAET,WAAW,CAACX,aAAa,EAAd,CADhB,CAELqB,MAAM,CAAEV,WAAW,CAACH,WAAW,EAAZ,CAFd,CAGLc,WAAW,CAAEX,WAAW,CAACF,gBAAgB,EAAjB,CAHnB,CAILc,UAAU,CAAEZ,WAAW,CAACD,eAAe,EAAhB,CAJlB,CAAP,CAMD,CAPM","sourcesContent":["const fetchSettings = () => {\n  return fetch(process.env.REACT_APP_API_LINK+\"settings\")\n    .then((x) => x.json());\n};\nconst fetchSkills = () => {\n  return fetch(process.env.REACT_APP_API_LINK+\"skills\")\n    .then((x) => x.json());\n};\nconst fetchExperiences = () => {\n  return fetch(process.env.REACT_APP_API_LINK+\"experiences\")\n    .then((x) => x.json());\n};\nconst fetchEducations = () => {\n    return fetch(process.env.REACT_APP_API_LINK+\"educations\")\n      .then((x) => x.json());\n  };\n\nconst wrapPromise = (promise) => {\n  let status = \"pending\";\n  let result = \"\";\n  let suspender = promise.then(\n    (r) => {\n      status = \"success\";\n      result = r;\n    },\n    (e) => {\n      status = \"error\";\n      result = e;\n    }\n  );\n\n  return {\n    read() {\n      if (status === \"pending\") {\n        throw suspender;\n      } else if (status === \"error\") {\n        throw result;\n      }\n\n      return result;\n    },\n  };\n};\n\nexport const settingsFetch = () => {\n  return {\n    settings: wrapPromise(fetchSettings()),\n    skills: wrapPromise(fetchSkills()),\n    experiences: wrapPromise(fetchExperiences()),\n    educations: wrapPromise(fetchEducations()),\n  };\n};\n"]},"metadata":{},"sourceType":"module"}